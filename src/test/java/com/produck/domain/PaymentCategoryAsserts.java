package com.produck.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PaymentCategoryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentCategoryAllPropertiesEquals(PaymentCategory expected, PaymentCategory actual) {
        assertPaymentCategoryAutoGeneratedPropertiesEquals(expected, actual);
        assertPaymentCategoryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentCategoryAllUpdatablePropertiesEquals(PaymentCategory expected, PaymentCategory actual) {
        assertPaymentCategoryUpdatableFieldsEquals(expected, actual);
        assertPaymentCategoryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentCategoryAutoGeneratedPropertiesEquals(PaymentCategory expected, PaymentCategory actual) {
        assertThat(expected)
            .as("Verify PaymentCategory auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentCategoryUpdatableFieldsEquals(PaymentCategory expected, PaymentCategory actual) {
        assertThat(expected)
            .as("Verify PaymentCategory relevant properties")
            .satisfies(e -> assertThat(e.getCode()).as("check code").isEqualTo(actual.getCode()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getIsDefault()).as("check isDefault").isEqualTo(actual.getIsDefault()))
            .satisfies(e -> assertThat(e.getIsHidden()).as("check isHidden").isEqualTo(actual.getIsHidden()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPaymentCategoryUpdatableRelationshipsEquals(PaymentCategory expected, PaymentCategory actual) {
        assertThat(expected)
            .as("Verify PaymentCategory relationships")
            .satisfies(e -> assertThat(e.getLedger()).as("check ledger").isEqualTo(actual.getLedger()));
    }
}
