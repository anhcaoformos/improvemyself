package com.produck.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ObjectiveAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveAllPropertiesEquals(Objective expected, Objective actual) {
        assertObjectiveAutoGeneratedPropertiesEquals(expected, actual);
        assertObjectiveAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveAllUpdatablePropertiesEquals(Objective expected, Objective actual) {
        assertObjectiveUpdatableFieldsEquals(expected, actual);
        assertObjectiveUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveAutoGeneratedPropertiesEquals(Objective expected, Objective actual) {
        assertThat(expected)
            .as("Verify Objective auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveUpdatableFieldsEquals(Objective expected, Objective actual) {
        assertThat(expected)
            .as("Verify Objective relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getIsHidden()).as("check isHidden").isEqualTo(actual.getIsHidden()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObjectiveUpdatableRelationshipsEquals(Objective expected, Objective actual) {
        assertThat(expected)
            .as("Verify Objective relationships")
            .satisfies(e -> assertThat(e.getPaymentCategory()).as("check paymentCategory").isEqualTo(actual.getPaymentCategory()))
            .satisfies(e -> assertThat(e.getLedger()).as("check ledger").isEqualTo(actual.getLedger()));
    }
}
